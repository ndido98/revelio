[tool.poetry]
name = "revelio"
version = "1.0.0"
description = "A declarative framework for face morphing detection experiments"
authors = [
    "Nicol√≤ Di Domenico <nicolo.didomenico@studio.unibo.it>",
]
license = "Apache 2.0"
readme = "README.md"

documentation = "https://ndido98.github.io/revelio"
homepage = "https://ndido98.github.io/revelio"
repository = "https://github.com/ndido98/revelio"

classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]

packages = [
    { include = "revelio", from = "src" }
]

[tool.poetry.scripts]
revelio = "revelio.cli:main"

[tool.poetry.dependencies]
python = ">=3.10, <3.12"
pyyaml = "~6.0"
pydantic = "~1.10"
# HACK: Poetry does not yet support fetching from PyPI with extras fetched from a custom URL,
# so we need to hardcode the Wheel URL until they fix it.
torch = [
    { url = "https://download.pytorch.org/whl/cu116/torch-1.12.1%2Bcu116-cp310-cp310-win_amd64.whl", markers = "sys_platform == 'win32'" },
    { url = "https://download.pytorch.org/whl/cu116/torch-1.12.1%2Bcu116-cp310-cp310-linux_x86_64.whl", markers = "sys_platform == 'linux'" },
]
torchvision = [
    { url = "https://download.pytorch.org/whl/cu116/torchvision-0.13.1%2Bcu116-cp310-cp310-win_amd64.whl", markers = "sys_platform == 'win32'" },
    { url = "https://download.pytorch.org/whl/cu116/torchvision-0.13.1%2Bcu116-cp310-cp310-linux_x86_64.whl", markers = "sys_platform == 'linux'" },
]
dlib = "~19.24"
numpy = "~1.23"
opencv-python = "~4.6"
tensorboard = "~2.10"
tqdm = "~4.64"
matplotlib = "~3.6"
PyWavelets = "~1.4"
scipy = "~1.9"
scikit-learn = "~1.1"
torch-tb-profiler = "~0.4"
facenet-pytorch = "~2.5"
wandb = "~0.13"

[tool.poetry.dev-dependencies]
autoflake = "~1.7.0"
black = "~22.10.0"
flake8 = "~5.0"
flake8-bugbear = "~22.10.0"
flake8-builtins = "~2.0.0"
flake8-comprehensions = "~3.10"
flake8-debugger = "~4.1"
flake8-eradicate = "~1.4.0"
flake8-logging-format = "~0.8.0"
hypothesis = "~6.56.0"
isort = "~5.10"
mkdocstrings = { version = "~0.19", extras = ["python"] }
mkdocs-gen-files = "~0.4"
mkdocs-literate-nav = "~0.5"
mkdocs-material = "~8.5.0"
mkdocs-section-index = "~0.3"
mypy = ">=0.900 <1.0"
pep8-naming = "~0.13"
pre-commit = "~2.20"
Pygments = "~2.13"
pymdown-extensions = "~9.5"
pytest = "~7.2.0"
pytest-github-actions-annotate-failures = "~0.1"
pytest-cov = "~4.0.0"
pyupgrade = "~3.2.0"
tryceratops = "~1.1"
types-Pillow = "~9.2"
types-pyyaml = "~6.0"
types-tqdm = "~4.64"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]

[tool.black]
target-version = ["py310"]
include = '\.pyi?$'

[tool.pytest.ini_options]
addopts = """\
    --cov revelio \
    --cov tests \
    --cov-report term-missing \
    --no-cov-on-fail \
"""

[tool.coverage.report]
fail_under = 80
exclude_lines = [
    'if TYPE_CHECKING:',
    'pragma: no cover'
]

[tool.mypy]
disallow_any_unimported = true
disallow_untyped_defs = true
no_implicit_optional = true
strict_equality = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
check_untyped_defs = true
show_error_codes = true

[[tool.mypy.overrides]]
module = "torchvision.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "dlib.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "cv2.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "matplotlib.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "facenet_pytorch.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pywt.*"
ignore_missing_imports = true
